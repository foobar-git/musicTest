<!doctype html>
<html>
  <head>
    <title>Music Streaming Web App</title>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
    <style type="text/css">
      #login, #loggedin {
        display: none;
      }
      .text-overflow {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        width: 500px;
      }
    </style>
  </head>

  <body style="background-image: url('sarajevo.jpg'); background-size: cover; margin-top: 30px;">
    <div id="mainPage">
      <div class="container" style="background-color: rgba(245,245,245,0.8); border-radius: 6px;">
        <a href="https://seeba.se"><img src="https://seeba.se/wp-content/uploads/2018/07/Seeba_logo.png" alt="logo"></a>
        <div id="login">
          <a href="/login" class="btn btn-primary" style="margin: 25px 0px 10px;">Log in with Spotify</a>
        </div>
        <div id="loggedin">
          <h5 style="text-align:right; font-family: 'Lucida Console', monospace; ">Web Streaming Player using Spotify API</h5>
          <div id="lists" style="border: 2px solid lightblue; border-radius: 3px; padding-left: 5px; margin-top: -10px; background-color: white;">
            <span style="display: inline-block; width: 100px; border-right: 2px solid orange;">
              <a href="#" style="display: inline-block">Test Playlist 1</a>
              <a href="#" style="display: inline-block; visibility: hidden">Test Playlist 2</a>
              <a href="#" style="display: inline-block; visibility: hidden">Test Playlist 3</a>
              <a href="#" style="display: inline-block; visibility: hidden">Test Playlist 4</a>
              <a href="#" style="display: inline-block; visibility: hidden">Test Playlist 5</a>
              <a href="#" style="display: inline-block; visibility: hidden">Test Playlist 6</a>
              <a href="#" style="display: inline-block; visibility: hidden">Test Playlist 7</a>
              <a href="#" style="display: inline-block; visibility: hidden">Test Playlist 8</a>
            </span>
            <span style="display: inline-block; width: 300px;">
              <a href="#" style="display: block" onclick="Play_Track1()">Beautiful Day - U2</a>
              <a href="#" style="display: block" onclick="Play_Track2()">Mysterious Ways - U2</a>
              <a href="#" style="display: block" onclick="Play_Track3()">Salome - U2 (Zooromancer Remix)</a>
              <a href="#" style="display: block" onclick="Play_Track4()">Outside - Foo Fighters</a>
              <a href="#" style="display: block" onclick="Play_Track5()">The Sky is A Neighborhood - Foo Fighters</a>
              <a href="#" style="display: block" onclick="Play_Track6()">Sunday Rain - Foo Fighters</a>
              <a href="#" style="display: block" onclick="Play_Track7()">Go Let It Out - Oasis</a>
            </span>
            <div id="trackButtons" style="padding: 5px 43px;">
              <button class="btn btn-primary" onclick="Play_Continue()">Play</button>
              <button class="btn btn-primary" onclick="Pause()">Pause</button>
              <!--a href="/play_song" class="btn btn-primary">Play</a>
              <a href="/pause_song" class="btn btn-primary">Pause</a-->
            </div>
          </div>
          <hr>
          <div id="user-profile">
          </div>
          <div id="oauth">
          </div>
          <button class="btn btn-default" id="obtain-new-token" style="margin-bottom: 10px;">Obtain new token using the refresh token</button>
        </div>
      </div>
    

      <script id="user-profile-template" type="text/x-handlebars-template">
        <h1>Logged in as {{display_name}}</h1>
        <div class="media">
          <div class="pull-left">
            <img class="media-object" width="150" src="{{images.0.url}}" />
          </div>
          <div class="media-body">
            <dl class="dl-horizontal">
              <dt>Display name</dt><dd class="clearfix">{{display_name}}</dd>
              <dt>Id</dt><dd>{{id}}</dd>
              <dt>Email</dt><dd>{{email}}</dd>
              <!--dt>Spotify URI</dt><dd><a href="{{external_urls.spotify}}">{{external_urls.spotify}}</a></dd-->
              <!--dt>Link</dt><dd><a href="{{href}}">{{href}}</a></dd-->
              <dt>Profile Image</dt><dd class="clearfix"><a href="{{images.0.url}}">{{images.0.url}}</a></dd>
              <dt>Country</dt><dd>{{country}}</dd>
            </dl>
          </div>
        </div>
      </script>

      <script id="oauth-template" type="text/x-handlebars-template">
        <h2>oAuth info</h2>
        <dl class="dl-horizontal">
          <dt>Access token</dt><dd class="text-overflow" id="a_token">{{access_token}}</dd>
          <dt>Refresh token</dt><dd class="text-overflow">{{refresh_token}}</dd>
        </dl>
      </script>

      <script src="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/2.0.0-alpha.1/handlebars.min.js"></script>
      <script src="https://code.jquery.com/jquery-1.10.1.min.js"></script>
      <script>
        (function() {

          /**
           * Obtains parameters from the hash of the URL
           * @return Object
           */
          function getHashParams() {
            var hashParams = {};
            var e, r = /([^&;=]+)=?([^&;]*)/g,
                q = window.location.hash.substring(1);
            while ( e = r.exec(q)) {
              hashParams[e[1]] = decodeURIComponent(e[2]);
            }
            return hashParams;
          }

          var userProfileSource = document.getElementById('user-profile-template').innerHTML,
              userProfileTemplate = Handlebars.compile(userProfileSource),
              userProfilePlaceholder = document.getElementById('user-profile');

          var oauthSource = document.getElementById('oauth-template').innerHTML,
              oauthTemplate = Handlebars.compile(oauthSource),
              oauthPlaceholder = document.getElementById('oauth');

          var params = getHashParams();

          var access_token = params.access_token,
              refresh_token = params.refresh_token,
              error = params.error;

          if (error) {
            alert('There was an error during the authentication');
          } else {
            if (access_token) {
              // render oauth info
              oauthPlaceholder.innerHTML = oauthTemplate({
                access_token: access_token,
                refresh_token: refresh_token
              });

              sessionStorage.setItem ("at", document.getElementById("a_token").innerHTML);

              $.ajax({
                  url: 'https://api.spotify.com/v1/me',
                  headers: {
                    'Authorization': 'Bearer ' + access_token
                  },
                  success: function(response) {
                    userProfilePlaceholder.innerHTML = userProfileTemplate(response);

                    $('#login').hide();
                    $('#loggedin').show();
                  }
              });
            } else {
                // render initial screen
                $('#login').show();
                $('#loggedin').hide();
            }

            document.getElementById('obtain-new-token').addEventListener('click', function() {
              $.ajax({
                url: '/refresh_token',
                data: {
                  'refresh_token': refresh_token
                }
              }).done(function(data) {
                access_token = data.access_token;
                oauthPlaceholder.innerHTML = oauthTemplate({
                  access_token: access_token,
                  refresh_token: refresh_token
                });
              });
            }, false);
          }
        })();

      </script>

      <footer>
        <!--% -include('footer.ejs') %-->
        <script src="https://sdk.scdn.co/spotify-player.js"></script>
        <script>
            var token = '';

            window.onSpotifyWebPlaybackSDKReady = () => {
                token = sessionStorage.getItem("at");
                const player = new Spotify.Player({
                    name: 'Web Playback SDK Quick Start Player',
                    getOAuthToken: cb => { cb(token); }
            });

            // Error handling
            player.addListener('initialization_error', ({ message }) => { console.error(message); });
            player.addListener('authentication_error', ({ message }) => { console.error(message); });
            player.addListener('account_error', ({ message }) => { console.error(message); });
            player.addListener('playback_error', ({ message }) => { console.error(message); });

            // Playback status updates
            player.addListener('player_state_changed', state => { console.log(state); });

            // Ready
            player.addListener('ready', ({ device_id }) => {
                console.log('Ready with Device ID', device_id);
                sessionStorage.setItem("di", device_id);
            });

            // Not Ready
            player.addListener('not_ready', ({ device_id }) => {
                console.log('Device ID has gone offline', device_id);
            });

            // Connect to the player!
            player.connect();
            };

            function Play() {
                $.ajax({
                  url: "https://api.spotify.com/v1/me/player/play?device_id=" + sessionStorage.getItem("di"),
                  type: "PUT",
                  data: '{"uris": ["spotify:track:5ya2gsaIhTkAuWYEMB0nw5"]}',
                  beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token );},
                  success: function(data) { 
                      console.log(data)
                  }
                });
            }

            function Play_Continue() {
                $.ajax({
                  url: "https://api.spotify.com/v1/me/player/play",
                  type: "PUT",
                  //data: '{"uris": [""]}',
                  beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token );},
                  success: function(data) { 
                      console.log(data)
                  }
                });
            }

            function Pause() {
                $.ajax({
                  url: "https://api.spotify.com/v1/me/player/pause",
                  type: "PUT",
                  //data: '{"uris": [""]}',
                  beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token );},
                  success: function(data) { 
                      console.log(data)
                  }
                });
            }

            function Play_Track1() {
                $.ajax({
                  url: "https://api.spotify.com/v1/me/player/play?device_id=" + sessionStorage.getItem("di"),
                  type: "PUT",
                  data: '{"uris": ["spotify:track:0gzqZ9d1jIKo9psEIthwXe"]}',
                  beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token );},
                  success: function(data) { 
                      console.log(data)
                  }
                });
            }
            
            function Play_Track2() {
                $.ajax({
                  url: "https://api.spotify.com/v1/me/player/play?device_id=" + sessionStorage.getItem("di"),
                  type: "PUT",
                  data: '{"uris": ["spotify:track:50JK22El2PTIzZBU2liLDI"]}',
                  beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token );},
                  success: function(data) { 
                      console.log(data)
                  }
                });
            }

            function Play_Track3() {
                $.ajax({
                  url: "https://api.spotify.com/v1/me/player/play?device_id=" + sessionStorage.getItem("di"),
                  type: "PUT",
                  data: '{"uris": ["spotify:track:5XY0iSytYQ1QbfSLTzKU6F"]}',
                  beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token );},
                  success: function(data) { 
                      console.log(data)
                  }
                });
            }

            function Play_Track4() {
                $.ajax({
                  url: "https://api.spotify.com/v1/me/player/play?device_id=" + sessionStorage.getItem("di"),
                  type: "PUT",
                  data: '{"uris": ["spotify:track:5BfbdJLRp9gUyyxeGJUECL"]}',
                  beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token );},
                  success: function(data) { 
                      console.log(data)
                  }
                });
            }

            function Play_Track5() {
                $.ajax({
                  url: "https://api.spotify.com/v1/me/player/play?device_id=" + sessionStorage.getItem("di"),
                  type: "PUT",
                  data: '{"uris": ["spotify:track:3kdMzXOcrDIdSWLdONHNK5"]}',
                  beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token );},
                  success: function(data) { 
                      console.log(data)
                  }
                });
            }

            function Play_Track6() {
                $.ajax({
                  url: "https://api.spotify.com/v1/me/player/play?device_id=" + sessionStorage.getItem("di"),
                  type: "PUT",
                  data: '{"uris": ["spotify:track:1tDM9ElAIOimEPBEnkXqe2"]}',
                  beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token );},
                  success: function(data) { 
                      console.log(data)
                  }
                });
            }

            function Play_Track7() {
                $.ajax({
                  url: "https://api.spotify.com/v1/me/player/play?device_id=" + sessionStorage.getItem("di"),
                  type: "PUT",
                  data: '{"uris": ["spotify:track:3eFL9jPBBALueXfjhe0jCd"]}',
                  beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token );},
                  success: function(data) { 
                      console.log(data)
                  }
                });
            }

        </script>
      </footer>
    </div>
  </body>
</html>

